##定义初始变量
$!{mybatisCodehelper.vm}
#set($tableName = $tool.append($tableInfo.name, "ServiceImpl"))
##设置回调
$!callback.setFileName($tool.append($tableName, ".kt"))
$!callback.setSavePath($tool.append($tableInfo.savePath, "/service/impl"))

##拿到主键
#if(!$tableInfo.pkColumn.isEmpty())
    #set($pk = $tableInfo.pkColumn.get(0))
#end

#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}service.impl;

import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};
import $!{tableInfo.savePackageName}.dao.$!{tableInfo.name}Dao;
import $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;
import org.springframework.stereotype.Service;
import org.springframework.data.domain.Page

import javax.annotation.Resource;
import java.util.List;

/**
 * $!{tableInfo.comment}($!{tableInfo.name})表服务实现类
 *
 * @author $!author
 * @since $!time.currTime()
 */
@Service("$!{tool.firstLowerCase($!{tableInfo.name})}Service")
class $!{tableName} : $!{tableInfo.name}Service {
    @Resource
    private val $!{tool.firstLowerCase($!{tableInfo.name})}Dao:$!{tableInfo.name}Dao = null

    /**
     * 通过ID查询单条数据
     *
     * @param $!pk.name 主键
     * @return 实例对象
     */

    override fun queryById($!pk.name:$!pk.ktShortType):$!{tableInfo.name} {
        return $!{tool.firstLowerCase($!{tableInfo.name})}Dao.queryById($!pk.name);
    }

    /**
     * 分页查询
     *
     * @param $!{tool.firstLowerCase($!{tableInfo.name})} 筛选条件
     * @param pageRequest      分页对象
     * @return 查询结果
     */
    override fun queryByPage($!{tool.firstLowerCase($!{tableInfo.name})}: $!{tableInfo.name}, pageRequest: PageRequest): Page<$!{tableInfo.name}> {
        val total: Long = $!{tool.firstLowerCase($!{tableInfo.name})}Dao.count($!{tool.firstLowerCase($!{tableInfo.name})})
        return PageImpl($!{tool.firstLowerCase($!{tableInfo.name})}Dao.queryAllByLimit($!{tool.firstLowerCase($!{tableInfo.name})}, pageRequest), pageRequest, total)
    }

    /**
     * 新增数据
     *
     * @param $!{tool.firstLowerCase($!{tableInfo.name})} 实例对象
     * @return 实例对象
     */
    override fun insert($!{tool.firstLowerCase($!{tableInfo.name})}: $!{tableInfo.name}): $!{tableInfo.name} {
        $!{tool.firstLowerCase($!{tableInfo.name})}Dao.insert($!{tool.firstLowerCase($!{tableInfo.name})})
        return $!{tool.firstLowerCase($!{tableInfo.name})}
    }

    /**
     * 修改数据
     *
     * @param $!{tool.firstLowerCase($!{tableInfo.name})} 实例对象
     * @return 实例对象
     */
    override fun update($!{tool.firstLowerCase($!{tableInfo.name})}: $!{tableInfo.name}): $!{tableInfo.name} {
        $!{tool.firstLowerCase($!{tableInfo.name})}Dao.update($!{tool.firstLowerCase($!{tableInfo.name})})
        return queryById($!{tool.firstLowerCase($!{tableInfo.name})}.$!pk.name)
    }

    /**
     * 通过主键删除数据
     *
     * @param $!pk.name 主键
     * @return 是否成功
     */
    override fun deleteById($!pk.name:$!pk.ktShortType):Boolean {
        return $!{tool.firstLowerCase($!{tableInfo.name})}Dao.deleteById($!pk.name) > 0;
    }
}
